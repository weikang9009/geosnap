language: minimal

sudo: false

matrix:
  fast_finish: true
  include:
    - name: "python-3.6"
      env: PY=3.6
    - name: "python-3.7"
      env: PY=3.7
    - name: "tarball"
      env: PY=3.7

before_install:
  # Install miniconda and create TEST env.
  - |
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
    wget -q $LTDB_SAMPLE -O ltdb_sample.zip
    wget -q $LTDB_FULLCOUNT -O ltdb_full.zip
    wget -q $NCDB -O ncdb.csv
    bash miniconda.sh -b -p $HOME/miniconda
    export PATH="$HOME/miniconda/bin:$PATH"
    export DLPATH=`pwd`
    conda config --set always_yes yes --set changeps1 no --set show_channel_urls true
    conda update --quiet conda
    conda config --add channels conda-forge --force
    conda config --set channel_priority strict
    conda config --set safety_checks disabled
    conda create --name TEST python=$PY --file requirements.txt --file requirements_docs.txt --file requirements_tests.txt
    source activate TEST
    conda info --all
install:
  - pip install -e . --no-deps --force-reinstall

script:
  - if [[ $TRAVIS_JOB_NAME == python-* ]]; then
      python -c "from tobler.data import store_rasters; store_rasters()"; 
      python -c "import os;from geosnap import io;path = os.environ['DLPATH'];io.store_ltdb(sample=path + '/ltdb_sample.zip', fullcount=path + '/ltdb_full.zip')"; 
      travis_wait 45 pytest --ignore=examples/ --ignore=geosnap/util/  --ignore=geosnap/visualize/ --cov geosnap; 
      jupyter nbconvert --to notebook --execute --inplace --ExecutePreprocessor.timeout=-1 --ExecutePreprocessor.kernel_name=python3 examples/*.ipynb;
    fi
  - if [[ $TRAVIS_JOB_NAME == 'tarball' ]]; then
      pip wheel . -w dist --no-deps ;
      twine check dist/* ;
    fi

notifications:
    email:
        recipients:
            - sjsrey@gmail.com
            - weikang9009@gmail.com
            - levi.john.wolf@gmail.com
            - ek@knaaptime.com 
        on_success: change
        on_failure: always 

after_success:
  - coveralls
